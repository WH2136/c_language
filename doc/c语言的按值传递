c语言最大的一个特点就是按值传递，没有引用这一说法.
只要记住这一点，编写函数和调用函数时，就会省去不少麻烦.
如果想要达到c++中的引用效果，可以使用指针来实现.
例如：
#include <stdio.h>

void foo(int *x) {
    *x = 4;
}
int main(void) {
  int var = 1;
  
  foo(&var);
  printf("the changed value of var is:%d\n", var);
  
  return 0;
}
编译运行以上程序后，我们看到输出的结果是：4，我们来仔细分析一下：
因为c语言是按值传递的，而在子函数foo中接受到的值是一个指针，是一个地址，所以在子函数中对这个指针做任何改变，
都不对影响到原来函数中指针的使用, 不管怎么改变，指针x始终指向变量var. 但是，如果对指针指向的变量做修改的话，
会影响到原来的函数，因为子函数foo接受到的值是指针x， 而不是x指针指向的变量.
